plugins {
    id 'java'
    id 'jacoco'
}
//apply from: "./jacoco.gradle"
group 'com.khanivorous.studentapp'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
// Versioning of dependencies
wrapper.gradleVersion = '5.5.1'
def cucumberVersion = '4.8.0'
def junitVersion = '5.5.2'
def okhttpVersion = '4.2.2'

repositories {
    jcenter()
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}
jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencies {

    implementation"com.squareup.okhttp3:okhttp:${okhttpVersion}"

    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.mockito:mockito-core:2.1.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junitVersion}"

}

test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'cucumber', 'src/test/resources']
        }
    }
}