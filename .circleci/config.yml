version: 2
jobs: # a collection of steps
  build:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Assemble JAR
          command: ./gradlew assemble
      # As the JAR was only assembled in the first build container, build/libs will be empty in all the other build containers.
      - store_artifacts:
          path: build/libs
  test:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
        docker: # run the steps with Docker
          - image: circleci/openjdk:11.0.3-jdk-stretch
        steps:
          - run:
              name: run unit tests
              command: ./gradlew test jacocoTestReport
  cucumber:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
        docker: # run the steps with Docker
          - image: circleci/openjdk:11.0.3-jdk-stretch
        steps:
          - run:
              name: run cucumber tests
              command: ./gradlew cucumber
workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test